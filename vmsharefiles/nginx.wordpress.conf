
server {
  listen 80;
  listen [::]:80;

  # SSL configuration
  #
  # listen 443 ssl;
  # listen [::]:443 ssl;
  #
  # Self signed certs generated by the ssl-cert package
  # Don't use them in a production server!
  #
  # include snippets/snakeoil.conf;

  # root /var/www/html;
  root place_root_here;

  # index index.html index.htm index.php;
  index place_index_here;

  # e.g. www.sitexxx.com xxx.site.com
  server_name place_server_name_here;

  # reference: http://wiki.nginx.org/WordPress

  # If your application is not compatible with IE <= 10, this will redirect visitors to a page advising a browser update
  # This works because IE 11 does not present itself as MSIE anymore
  if ($http_user_agent ~ "MSIE" ) {
    return 303 https://browser-update.org/update.html;
  }

  location / {
    # First attempt to serve request as file, then
    # as directory, then fall back to displaying a 404.
    try_files $uri $uri/ /index.php?$args;
  }

  # wordpress subfolder configuration
  location /wp {
    # unless the request is for a valid file, send to bootstrap

    #if (!-e $request_filename) {
    #  rewrite ^(.+)$ /wp/index.php?q=$1 last;
    #}

    try_files $uri $uri/ /wp/index.php?$args;
  }

  # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
  location ~ \.php$ {
    include snippets/fastcgi-php.conf;

    # With php5-cgi alone:
    # # fastcgi_pass 127.0.0.1:9000;

    # With php5-fpm:
    fastcgi_pass unix:/var/run/php5-fpm.sock;

    # new added for /wp subfolder config
    fastcgi_split_path_info ^(/wp)(/.*)$;
  }

  # deny access to .htaccess files, if Apache's document root concurs with nginx's one
  location ~ /\.ht {
    deny all;
  }

  # sets all media to expire after 3 days. can be set to 1y if its 365 days
  location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
    expires 1d;
    log_not_found off;
  }
}

